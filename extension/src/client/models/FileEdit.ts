/* tslint:disable */
/* eslint-disable */
/**
 * Continue API
 * Continue API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Range } from './Range';
import {
    RangeFromJSON,
    RangeFromJSONTyped,
    RangeToJSON,
} from './Range';

/**
 * 
 * @export
 * @interface FileEdit
 */
export interface FileEdit {
    /**
     * 
     * @type {string}
     * @memberof FileEdit
     */
    filepath: string;
    /**
     * 
     * @type {Range}
     * @memberof FileEdit
     */
    range: Range;
    /**
     * 
     * @type {string}
     * @memberof FileEdit
     */
    replacement: string;
}

/**
 * Check if a given object implements the FileEdit interface.
 */
export function instanceOfFileEdit(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "filepath" in value;
    isInstance = isInstance && "range" in value;
    isInstance = isInstance && "replacement" in value;

    return isInstance;
}

export function FileEditFromJSON(json: any): FileEdit {
    return FileEditFromJSONTyped(json, false);
}

export function FileEditFromJSONTyped(json: any, ignoreDiscriminator: boolean): FileEdit {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'filepath': json['filepath'],
        'range': RangeFromJSON(json['range']),
        'replacement': json['replacement'],
    };
}

export function FileEditToJSON(value?: FileEdit | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'filepath': value.filepath,
        'range': RangeToJSON(value.range),
        'replacement': value.replacement,
    };
}

