/* tslint:disable */
/* eslint-disable */
/**
 * Continue API
 * Continue API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InlineBody
 */
export interface InlineBody {
    /**
     * 
     * @type {string}
     * @memberof InlineBody
     */
    filecontents: string;
    /**
     * 
     * @type {number}
     * @memberof InlineBody
     */
    startline: number;
    /**
     * 
     * @type {number}
     * @memberof InlineBody
     */
    endline: number;
    /**
     * 
     * @type {string}
     * @memberof InlineBody
     */
    traceback?: string;
}

/**
 * Check if a given object implements the InlineBody interface.
 */
export function instanceOfInlineBody(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "filecontents" in value;
    isInstance = isInstance && "startline" in value;
    isInstance = isInstance && "endline" in value;

    return isInstance;
}

export function InlineBodyFromJSON(json: any): InlineBody {
    return InlineBodyFromJSONTyped(json, false);
}

export function InlineBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): InlineBody {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'filecontents': json['filecontents'],
        'startline': json['startline'],
        'endline': json['endline'],
        'traceback': !exists(json, 'traceback') ? undefined : json['traceback'],
    };
}

export function InlineBodyToJSON(value?: InlineBody | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'filecontents': value.filecontents,
        'startline': value.startline,
        'endline': value.endline,
        'traceback': value.traceback,
    };
}

